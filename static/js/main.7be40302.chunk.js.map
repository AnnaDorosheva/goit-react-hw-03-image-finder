{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","index.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/servises/pictures-api.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","ImageGaleryItem","pictures","src","alt","className","s","ImageGalleryItemImage","ImageGallery","this","props","onOpen","listRef","ref","map","id","url","largeUrl","key","onClick","ImageGalleryItem","Component","LoaderSpin","loader","type","color","height","width","timeout","React","KEY","BASE_URL","fetchPictures","query","page","axios","get","Searchbar","onChange","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","autoComplete","autoFocus","placeholder","LoadMore","Button","Modal","blackdropRef","createRef","hendlePress","e","code","onClouse","handleBlackdropClick","current","target","window","addEventListener","removeEventListener","largeImg","Overlay","mapper","webformatURL","largeImageURL","App","state","isLoading","error","isOpenModal","henleChange","setState","picturesAPI","then","response","data","hits","catch","finally","openModal","closeModal","hendleSubmit","preventDefault","handleCkick","prevState","message","prevProps","console","log","length","setTimeout","scrollTo","top","scrollHeight","behavior","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7be40302.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3cM5m\",\"Modal\":\"Modal_Modal__xlbIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3scnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__5wG7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__32fLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"src_App__3-LOn\"};","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGaleryItem = ({ pictures }) => {\n  return (\n    <Fragment>\n      <img src={pictures} alt=\"\" className={s.ImageGalleryItemImage} />\n    </Fragment>\n  );\n};\n\nImageGaleryItem.propTypes ={\n  pictures: PropTypes.string.isRequired\n};\n\nexport default ImageGaleryItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGaleryItem from '../ImageGalleryItem/ImageGalleryItem.js';\n\nexport default class ImageGallery extends Component {\n  render() {\n    const { pictures, onOpen, listRef } = this.props;\n    return (\n      <ul ref={listRef} className={s.ImageGallery}>\n        {pictures.map(({ id, url, largeUrl }) => (\n          <li\n            key={id}\n            onClick={() => onOpen(largeUrl)}\n            className={s.ImageGalleryItem}\n          >\n            <ImageGaleryItem pictures={url} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      url: PropTypes.string.isRequired,\n      largeUrl: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onOpen: PropTypes.func.isRequired,\n};\n\n// const ImageGalery = ({ pictures, onOpen }) => (\n//   <ul className={s.ImageGallery}>\n//     {pictures.map(({ id, url, largeUrl }) => (\n//       <li\n//         key={id}\n//         onClick={() => onOpen(largeUrl)}\n//         className={s.ImageGalleryItem}\n//       >\n//         <ImageGaleryItem pictures={url} />\n//       </li>\n//     ))}\n//   </ul>\n// );\n\n// ImageGalery.propTypes = {\n// pictures: PropTypes.arrayOf(PropTypes.shape({\n//   id: PropTypes.number.isRequired,\n//   url: PropTypes.string.isRequired,\n//   largeUrl: PropTypes.string.isRequired\n// }).isRequired).isRequired,\n// onOpen: PropTypes.func.isRequired\n// };\n\n// export default ImageGalery;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default class LoaderSpin extends React.Component {\n //other logic\n   render() {\n  return(\n   <Loader\n   className={s.loader}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n\n   />\n  );\n   }\n}\n","// import React from 'react';\nimport axios from 'axios';\n\nconst KEY = 'key=14472198-4709365459cd2529b3bbd4fdf';\nconst BASE_URL ='https://pixabay.com/api/?';;\n// const query ='&q=photo';\n// const page = '&page=1';\n\n// export const fetchPictures = ( query = 'photo', page = 1) => (\n//   axios.get(BASE_URL + query + page)\n// );\n\nexport const fetchPictures = (query = 'photo', page = 1) => (\n  axios.get(BASE_URL  + KEY + `&per_page=12&q=${query}&page=${page}`)\n);\n","import React from 'react';\nimport s from './Searchbar.module.css';\n\n\nconst Searchbar = ({ query, onClick, onChange, onSubmit}) =>(\n  <header className={s.Searchbar}>\n     <form  onSubmit={onSubmit} className={s.SearchForm}>\n      <button type=\"button\" onClick={onClick} className={s.SearchFormButton}>\n         <span className={s.SearchFormButtonLabel}>Search</span>\n       </button>\n\n       <input\n        className={s.SearchFormInput}\n        type=\"text\"\n        value={query}\n        onChange={onChange}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n    </form>\n  </header>\n);\n\nexport default Searchbar;\n// export default class Searchbar extends Component {\n//   state = {\n//     query: '',\n//   }\n\n//   henleChange = e => {\n//     this.setState({\n//       query: e.target.value\n//     })\n//   }\n\n//   hendleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onSubmit(this.state.query);\n\n//     this.setState({ query: ''})\n//   }\n//   render() {\n//     const { query } = this.state;\n//     return(\n//       <header className={s.Searchbar}>\n//   <form onSubmit={this.hendleSubmit} className={s.SearchForm}>\n//     <button type=\"submit\" className={s.SearchFormButton}>\n//       <span className={s.SearchFormButtonLabel}>Search</span>\n//     </button>\n\n//     <input\n//       className={s.SearchFormInput}\n//       type=\"text\"\n//       value={query}\n//       onChange={this.henleChange}\n//       autoComplete=\"off\"\n//       autoFocus\n//       placeholder=\"Search images and photos\"\n//     />\n//   </form>\n// </header>\n//     )\n//   }\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\n\nconst LoadMore = ({onClick}) => {\n  return  <button type='button' className={s.Button} onClick={onClick}>Load more...</button>;\n}\n\nLoadMore.propTypes = {\n  onClick: PropTypes.func.isRequired\n}\n\nexport default LoadMore;\n","import React, { Component, createRef } from 'react';\nimport s from './Modal.module.css';\n\nexport default class Modal extends Component {\n  blackdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.hendlePress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.hendlePress);\n  }\n\n  hendlePress = e => {\n    if (e.code !== 'Escape') return;\n    this.props.onClouse();\n  };\n\n  handleBlackdropClick = e => {\n    const { current } = this.blackdropRef;\n    if (current !== e.target) return;\n    this.props.onClouse();\n  };\n  render() {\n    const { largeImg } = this.props;\n    return (\n      <div\n        className={s.Overlay}\n        ref={this.blackdropRef}\n        onClick={this.handleBlackdropClick}\n      >\n        <div className={s.Modal}>\n        <img src={largeImg} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport ImageGalery from '../ImageGallery/ImageGallery';\nimport LoaderSpin from '../Loader/Loader';\nimport * as picturesAPI from '../servises/pictures-api';\nimport Searchbar from '../Searchbar/Searchbar';\nimport LoadMore from '../Button/Button';\nimport Modal from '../Modal/Modal.js';\n\nconst mapper = pictures => {\n  return pictures.map(\n    ({ webformatURL: url, largeImageURL: largeUrl, ...props }) => ({\n      url,\n      largeUrl,\n      ...props,\n    }),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    pictures: [],\n    isLoading: false,\n    error: null,\n    isOpenModal: false,\n    largeImg: '',\n    page: 2,\n    query: '',\n  };\n\n  listRef = createRef();\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('upd');\n    console.log('this.listRef.current', this.listRef.current);\n    if (\n      prevState.pictures !== this.state.pictures &&\n      this.state.pictures.length > 12\n    ) {\n      console.log('this.listRef');\n      setTimeout(\n        () =>\n          this.listRef.current.scrollTo({\n            top: this.listRef.current.scrollHeight,\n            behavior: 'smooth',\n          }),\n        500,\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchPictures();\n  }\n\n  // при вводе в input запроса, записываем запрос в query\n  henleChange = e => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  // рендерим картинки по fetch запросу\n  fetchPictures = query => {\n    this.setState({ isLoading: true });\n    picturesAPI\n      .fetchPictures(this.state.query)\n      .then(response => this.setState({ pictures: mapper(response.data.hits) }))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  openModal = largeImg => this.setState({ isOpenModal: true, largeImg });\n\n  closeModal = () => this.setState({ isOpenModal: false });\n\n  // для загрузки изображений при submit формы\n  hendleSubmit = e => {\n    e.preventDefault();\n\n    this.fetchPictures(this.state.query);\n  };\n\n  // функция для дозагрузки при клике на кнопку Load more\n  handleCkick = e => {\n    this.setState({ isLoading: true });\n    const { page, query } = this.state;\n    picturesAPI\n      .fetchPictures(query, page)\n      .then(({ data }) =>\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...mapper(data.hits)],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => error.message)\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { pictures, isLoading, largeImg, error, query } = this.state;\n    return (\n      <div>\n        <Searchbar\n          onClick={this.fetchPictures}\n          value={query}\n          onChange={this.henleChange}\n          onSubmit={this.hendleSubmit}\n        />\n        {isLoading ? (\n          <LoaderSpin />\n        ) : (\n          <ImageGalery\n            listRef={this.listRef}\n            onOpen={this.openModal}\n            pictures={pictures}\n          />\n        )}\n        {error && (\n          <p>Oh my God!!! Something went wrong: {error.message} &#x02A02;</p>\n        )}\n        {pictures.length > 0 && <LoadMore onClick={this.handleCkick} />}\n        {this.state.isOpenModal && (\n          <Modal largeImg={largeImg} onClouse={this.closeModal} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport s from './index.module.css';\n\n\nReactDOM.render(<App className={s.App} />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2Egle\",\"SearchForm\":\"Searchbar_SearchForm__1sj-L\",\"SearchFormButton\":\"Searchbar_SearchFormButton__35hpn\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1RWW3\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3PcPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3aVl1\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__3SnsW\"};"],"sourceRoot":""}